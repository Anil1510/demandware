{"version":3,"file":"wishlist.js","sources":["webpack:///webpack/bootstrap","webpack:///./storefront-reference-architecture/cartridges/app_storefront_base/cartridge/client/default/js/components/focus.js","webpack:///./storefront-reference-architecture/cartridges/app_storefront_base/cartridge/client/default/js/product/base.js","webpack:///./storefront-reference-architecture/cartridges/app_storefront_base/cartridge/client/default/js/util.js","webpack:///./whislist/plugin_wishlists/cartridge/client/default/js/wishlist.js","webpack:///./whislist/plugin_wishlists/cartridge/client/default/js/wishlist/wishlist.js"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./whislist/plugin_wishlists/cartridge/client/default/js/wishlist.js\");\n","'use strict';\r\n\r\nmodule.exports = {\r\n    setTabNextFocus: function (focusParams) {\r\n        var KEYCODE_TAB = 9;\r\n        var isTabPressed = (focusParams.event.key === 'Tab' || focusParams.event.keyCode === KEYCODE_TAB);\r\n\r\n        if (!isTabPressed) {\r\n            return;\r\n        }\r\n\r\n        var firstFocusableEl = $(focusParams.containerSelector + ' ' + focusParams.firstElementSelector);\r\n        var lastFocusableEl = $(focusParams.containerSelector + ' ' + focusParams.lastElementSelector);\r\n\r\n        if ($(focusParams.containerSelector + ' ' + focusParams.lastElementSelector).is(':disabled')) {\r\n            lastFocusableEl = $(focusParams.containerSelector + ' ' + focusParams.nextToLastElementSelector);\r\n            if ($('.product-quickview.product-set').length > 0) {\r\n                var linkElements = $(focusParams.containerSelector + ' a#fa-link.share-icons');\r\n                lastFocusableEl = linkElements[linkElements.length - 1];\r\n            }\r\n        }\r\n\r\n        if (focusParams.event.shiftKey) /* shift + tab */ {\r\n            if ($(':focus').is(firstFocusableEl)) {\r\n                lastFocusableEl.focus();\r\n                focusParams.event.preventDefault();\r\n            }\r\n        } else /* tab */ {\r\n            if ($(':focus').is(lastFocusableEl)) { // eslint-disable-line\r\n                firstFocusableEl.focus();\r\n                focusParams.event.preventDefault();\r\n            }\r\n        }\r\n    }\r\n};\r\n","'use strict';\r\nvar focusHelper = require('../components/focus');\r\n\r\n/**\r\n * Retrieves the relevant pid value\r\n * @param {jquery} $el - DOM container for a given add to cart button\r\n * @return {string} - value to be used when adding product to cart\r\n */\r\nfunction getPidValue($el) {\r\n    var pid;\r\n\r\n    if ($('#quickViewModal').hasClass('show') && !$('.product-set').length) {\r\n        pid = $($el).closest('.modal-content').find('.product-quickview').data('pid');\r\n    } else if ($('.product-set-detail').length || $('.product-set').length) {\r\n        pid = $($el).closest('.product-detail').find('.product-id').text();\r\n    } else {\r\n        pid = $('.product-detail:not(\".bundle-item\")').data('pid');\r\n    }\r\n\r\n    return pid;\r\n}\r\n\r\n/**\r\n * Retrieve contextual quantity selector\r\n * @param {jquery} $el - DOM container for the relevant quantity\r\n * @return {jquery} - quantity selector DOM container\r\n */\r\nfunction getQuantitySelector($el) {\r\n    var quantitySelected;\r\n    if ($el && $('.set-items').length) {\r\n        quantitySelected = $($el).closest('.product-detail').find('.quantity-select');\r\n    } else if ($el && $('.product-bundle').length) {\r\n        var quantitySelectedModal = $($el).closest('.modal-footer').find('.quantity-select');\r\n        var quantitySelectedPDP = $($el).closest('.bundle-footer').find('.quantity-select');\r\n        if (quantitySelectedModal.val() === undefined) {\r\n            quantitySelected = quantitySelectedPDP;\r\n        } else {\r\n            quantitySelected = quantitySelectedModal;\r\n        }\r\n    } else {\r\n        quantitySelected = $('.quantity-select');\r\n    }\r\n    return quantitySelected;\r\n}\r\n\r\n/**\r\n * Retrieves the value associated with the Quantity pull-down menu\r\n * @param {jquery} $el - DOM container for the relevant quantity\r\n * @return {string} - value found in the quantity input\r\n */\r\nfunction getQuantitySelected($el) {\r\n    return getQuantitySelector($el).val();\r\n}\r\n\r\n/**\r\n * Process the attribute values for an attribute that has image swatches\r\n *\r\n * @param {Object} attr - Attribute\r\n * @param {string} attr.id - Attribute ID\r\n * @param {Object[]} attr.values - Array of attribute value objects\r\n * @param {string} attr.values.value - Attribute coded value\r\n * @param {string} attr.values.url - URL to de/select an attribute value of the product\r\n * @param {boolean} attr.values.isSelectable - Flag as to whether an attribute value can be\r\n *     selected.  If there is no variant that corresponds to a specific combination of attribute\r\n *     values, an attribute may be disabled in the Product Detail Page\r\n * @param {jQuery} $productContainer - DOM container for a given product\r\n * @param {Object} msgs - object containing resource messages\r\n */\r\nfunction processSwatchValues(attr, $productContainer, msgs) {\r\n    attr.values.forEach(function (attrValue) {\r\n        var $attrValue = $productContainer.find('[data-attr=\"' + attr.id + '\"] [data-attr-value=\"' +\r\n            attrValue.value + '\"]');\r\n        var $swatchButton = $attrValue.parent();\r\n\r\n        if (attrValue.selected) {\r\n            $attrValue.addClass('selected');\r\n            $attrValue.siblings('.selected-assistive-text').text(msgs.assistiveSelectedText);\r\n        } else {\r\n            $attrValue.removeClass('selected');\r\n            $attrValue.siblings('.selected-assistive-text').empty();\r\n        }\r\n\r\n        if (attrValue.url) {\r\n            $swatchButton.attr('data-url', attrValue.url);\r\n        } else {\r\n            $swatchButton.removeAttr('data-url');\r\n        }\r\n\r\n        // Disable if not selectable\r\n        $attrValue.removeClass('selectable unselectable');\r\n\r\n        $attrValue.addClass(attrValue.selectable ? 'selectable' : 'unselectable');\r\n    });\r\n}\r\n\r\n/**\r\n * Process attribute values associated with an attribute that does not have image swatches\r\n *\r\n * @param {Object} attr - Attribute\r\n * @param {string} attr.id - Attribute ID\r\n * @param {Object[]} attr.values - Array of attribute value objects\r\n * @param {string} attr.values.value - Attribute coded value\r\n * @param {string} attr.values.url - URL to de/select an attribute value of the product\r\n * @param {boolean} attr.values.isSelectable - Flag as to whether an attribute value can be\r\n *     selected.  If there is no variant that corresponds to a specific combination of attribute\r\n *     values, an attribute may be disabled in the Product Detail Page\r\n * @param {jQuery} $productContainer - DOM container for a given product\r\n */\r\nfunction processNonSwatchValues(attr, $productContainer) {\r\n    var $attr = '[data-attr=\"' + attr.id + '\"]';\r\n    var $defaultOption = $productContainer.find($attr + ' .select-' + attr.id + ' option:first');\r\n    $defaultOption.attr('value', attr.resetUrl);\r\n\r\n    attr.values.forEach(function (attrValue) {\r\n        var $attrValue = $productContainer\r\n            .find($attr + ' [data-attr-value=\"' + attrValue.value + '\"]');\r\n        $attrValue.attr('value', attrValue.url)\r\n            .removeAttr('disabled');\r\n\r\n        if (!attrValue.selectable) {\r\n            $attrValue.attr('disabled', true);\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * Routes the handling of attribute processing depending on whether the attribute has image\r\n *     swatches or not\r\n *\r\n * @param {Object} attrs - Attribute\r\n * @param {string} attr.id - Attribute ID\r\n * @param {jQuery} $productContainer - DOM element for a given product\r\n * @param {Object} msgs - object containing resource messages\r\n */\r\nfunction updateAttrs(attrs, $productContainer, msgs) {\r\n    // Currently, the only attribute type that has image swatches is Color.\r\n    var attrsWithSwatches = ['color'];\r\n\r\n    attrs.forEach(function (attr) {\r\n        if (attrsWithSwatches.indexOf(attr.id) > -1) {\r\n            processSwatchValues(attr, $productContainer, msgs);\r\n        } else {\r\n            processNonSwatchValues(attr, $productContainer);\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * Updates the availability status in the Product Detail Page\r\n *\r\n * @param {Object} response - Ajax response object after an\r\n *                            attribute value has been [de]selected\r\n * @param {jQuery} $productContainer - DOM element for a given product\r\n */\r\nfunction updateAvailability(response, $productContainer) {\r\n    var availabilityValue = '';\r\n    var availabilityMessages = response.product.availability.messages;\r\n    if (!response.product.readyToOrder) {\r\n        availabilityValue = '<li><div>' + response.resources.info_selectforstock + '</div></li>';\r\n    } else {\r\n        availabilityMessages.forEach(function (message) {\r\n            availabilityValue += '<li><div>' + message + '</div></li>';\r\n        });\r\n    }\r\n\r\n    $($productContainer).trigger('product:updateAvailability', {\r\n        product: response.product,\r\n        $productContainer: $productContainer,\r\n        message: availabilityValue,\r\n        resources: response.resources\r\n    });\r\n}\r\n\r\n/**\r\n * Generates html for product attributes section\r\n *\r\n * @param {array} attributes - list of attributes\r\n * @return {string} - Compiled HTML\r\n */\r\nfunction getAttributesHtml(attributes) {\r\n    if (!attributes) {\r\n        return '';\r\n    }\r\n\r\n    var html = '';\r\n\r\n    attributes.forEach(function (attributeGroup) {\r\n        if (attributeGroup.ID === 'mainAttributes') {\r\n            attributeGroup.attributes.forEach(function (attribute) {\r\n                html += '<div class=\"attribute-values\">' + attribute.label + ': '\r\n                    + attribute.value + '</div>';\r\n            });\r\n        }\r\n    });\r\n\r\n    return html;\r\n}\r\n\r\n/**\r\n * @typedef UpdatedOptionValue\r\n * @type Object\r\n * @property {string} id - Option value ID for look up\r\n * @property {string} url - Updated option value selection URL\r\n */\r\n\r\n/**\r\n * @typedef OptionSelectionResponse\r\n * @type Object\r\n * @property {string} priceHtml - Updated price HTML code\r\n * @property {Object} options - Updated Options\r\n * @property {string} options.id - Option ID\r\n * @property {UpdatedOptionValue[]} options.values - Option values\r\n */\r\n\r\n/**\r\n * Updates DOM using post-option selection Ajax response\r\n *\r\n * @param {OptionSelectionResponse} optionsHtml - Ajax response optionsHtml from selecting a product option\r\n * @param {jQuery} $productContainer - DOM element for current product\r\n */\r\nfunction updateOptions(optionsHtml, $productContainer) {\r\n\t// Update options\r\n    $productContainer.find('.product-options').empty().html(optionsHtml);\r\n}\r\n\r\n/**\r\n * Dynamically creates Bootstrap carousel from response containing images\r\n * @param {Object[]} imgs - Array of large product images,along with related information\r\n * @param {jQuery} $productContainer - DOM element for a given product\r\n */\r\nfunction createCarousel(imgs, $productContainer) {\r\n    var carousel = $productContainer.find('.carousel');\r\n    $(carousel).carousel('dispose');\r\n    var carouselId = $(carousel).attr('id');\r\n    $(carousel).empty().append('<ol class=\"carousel-indicators\"></ol><div class=\"carousel-inner\" role=\"listbox\"></div><a class=\"carousel-control-prev\" href=\"#' + carouselId + '\" role=\"button\" data-slide=\"prev\"><span class=\"fa icon-prev\" aria-hidden=\"true\"></span><span class=\"sr-only\">' + $(carousel).data('prev') + '</span></a><a class=\"carousel-control-next\" href=\"#' + carouselId + '\" role=\"button\" data-slide=\"next\"><span class=\"fa icon-next\" aria-hidden=\"true\"></span><span class=\"sr-only\">' + $(carousel).data('next') + '</span></a>');\r\n    for (var i = 0; i < imgs.length; i++) {\r\n        $('<div class=\"carousel-item\"><img src=\"' + imgs[i].url + '\" class=\"d-block img-fluid\" alt=\"' + imgs[i].alt + ' image number ' + parseInt(imgs[i].index, 10) + '\" title=\"' + imgs[i].title + '\" itemprop=\"image\" /></div>').appendTo($(carousel).find('.carousel-inner'));\r\n        $('<li data-target=\"#' + carouselId + '\" data-slide-to=\"' + i + '\" class=\"\"></li>').appendTo($(carousel).find('.carousel-indicators'));\r\n    }\r\n    $($(carousel).find('.carousel-item')).first().addClass('active');\r\n    $($(carousel).find('.carousel-indicators > li')).first().addClass('active');\r\n    if (imgs.length === 1) {\r\n        $($(carousel).find('.carousel-indicators, a[class^=\"carousel-control-\"]')).detach();\r\n    }\r\n    $(carousel).carousel();\r\n    $($(carousel).find('.carousel-indicators')).attr('aria-hidden', true);\r\n}\r\n\r\n/**\r\n * Parses JSON from Ajax call made whenever an attribute value is [de]selected\r\n * @param {Object} response - response from Ajax call\r\n * @param {Object} response.product - Product object\r\n * @param {string} response.product.id - Product ID\r\n * @param {Object[]} response.product.variationAttributes - Product attributes\r\n * @param {Object[]} response.product.images - Product images\r\n * @param {boolean} response.product.hasRequiredAttrsSelected - Flag as to whether all required\r\n *     attributes have been selected.  Used partially to\r\n *     determine whether the Add to Cart button can be enabled\r\n * @param {jQuery} $productContainer - DOM element for a given product.\r\n */\r\nfunction handleVariantResponse(response, $productContainer) {\r\n    var isChoiceOfBonusProducts =\r\n        $productContainer.parents('.choose-bonus-product-dialog').length > 0;\r\n    var isVaraint;\r\n    if (response.product.variationAttributes) {\r\n        updateAttrs(response.product.variationAttributes, $productContainer, response.resources);\r\n        isVaraint = response.product.productType === 'variant';\r\n        if (isChoiceOfBonusProducts && isVaraint) {\r\n            $productContainer.parent('.bonus-product-item')\r\n                .data('pid', response.product.id);\r\n\r\n            $productContainer.parent('.bonus-product-item')\r\n                .data('ready-to-order', response.product.readyToOrder);\r\n        }\r\n    }\r\n\r\n    // Update primary images\r\n    var primaryImageUrls = response.product.images.large;\r\n    createCarousel(primaryImageUrls, $productContainer);\r\n\r\n    // Update pricing\r\n    if (!isChoiceOfBonusProducts) {\r\n        var $priceSelector = $('.prices .price', $productContainer).length\r\n            ? $('.prices .price', $productContainer)\r\n            : $('.prices .price');\r\n        $priceSelector.replaceWith(response.product.price.html);\r\n    }\r\n\r\n    // Update promotions\r\n    $productContainer.find('.promotions').empty().html(response.product.promotionsHtml);\r\n\r\n    updateAvailability(response, $productContainer);\r\n\r\n    if (isChoiceOfBonusProducts) {\r\n        var $selectButton = $productContainer.find('.select-bonus-product');\r\n        $selectButton.trigger('bonusproduct:updateSelectButton', {\r\n            product: response.product, $productContainer: $productContainer\r\n        });\r\n    } else {\r\n        // Enable \"Add to Cart\" button if all required attributes have been selected\r\n        $('button.add-to-cart, button.add-to-cart-global, button.update-cart-product-global').trigger('product:updateAddToCart', {\r\n            product: response.product, $productContainer: $productContainer\r\n        }).trigger('product:statusUpdate', response.product);\r\n    }\r\n\r\n    // Update attributes\r\n    $productContainer.find('.main-attributes').empty()\r\n        .html(getAttributesHtml(response.product.attributes));\r\n}\r\n\r\n/**\r\n * @typespec UpdatedQuantity\r\n * @type Object\r\n * @property {boolean} selected - Whether the quantity has been selected\r\n * @property {string} value - The number of products to purchase\r\n * @property {string} url - Compiled URL that specifies variation attributes, product ID, options,\r\n *     etc.\r\n */\r\n\r\n/**\r\n * Updates the quantity DOM elements post Ajax call\r\n * @param {UpdatedQuantity[]} quantities -\r\n * @param {jQuery} $productContainer - DOM container for a given product\r\n */\r\nfunction updateQuantities(quantities, $productContainer) {\r\n    if ($productContainer.parent('.bonus-product-item').length <= 0) {\r\n        var optionsHtml = quantities.map(function (quantity) {\r\n            var selected = quantity.selected ? ' selected ' : '';\r\n            return '<option value=\"' + quantity.value + '\"  data-url=\"' + quantity.url + '\"' +\r\n                selected + '>' + quantity.value + '</option>';\r\n        }).join('');\r\n        getQuantitySelector($productContainer).empty().html(optionsHtml);\r\n    }\r\n}\r\n\r\n/**\r\n * updates the product view when a product attribute is selected or deselected or when\r\n *         changing quantity\r\n * @param {string} selectedValueUrl - the Url for the selected variation value\r\n * @param {jQuery} $productContainer - DOM element for current product\r\n */\r\nfunction attributeSelect(selectedValueUrl, $productContainer) {\r\n    if (selectedValueUrl) {\r\n        $('body').trigger('product:beforeAttributeSelect',\r\n            { url: selectedValueUrl, container: $productContainer });\r\n\r\n        $.ajax({\r\n            url: selectedValueUrl,\r\n            method: 'GET',\r\n            success: function (data) {\r\n                handleVariantResponse(data, $productContainer);\r\n                updateOptions(data.product.optionsHtml, $productContainer);\r\n                updateQuantities(data.product.quantities, $productContainer);\r\n                $('body').trigger('product:afterAttributeSelect',\r\n                    { data: data, container: $productContainer });\r\n                $.spinner().stop();\r\n            },\r\n            error: function () {\r\n                $.spinner().stop();\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n/**\r\n * Retrieves url to use when adding a product to the cart\r\n *\r\n * @return {string} - The provided URL to use when adding a product to the cart\r\n */\r\nfunction getAddToCartUrl() {\r\n    return $('.add-to-cart-url').val();\r\n}\r\n\r\n/**\r\n * Parses the html for a modal window\r\n * @param {string} html - representing the body and footer of the modal window\r\n *\r\n * @return {Object} - Object with properties body and footer.\r\n */\r\nfunction parseHtml(html) {\r\n    var $html = $('<div>').append($.parseHTML(html));\r\n\r\n    var body = $html.find('.choice-of-bonus-product');\r\n    var footer = $html.find('.modal-footer').children();\r\n\r\n    return { body: body, footer: footer };\r\n}\r\n\r\n/**\r\n * Retrieves url to use when adding a product to the cart\r\n *\r\n * @param {Object} data - data object used to fill in dynamic portions of the html\r\n */\r\nfunction chooseBonusProducts(data) {\r\n    $('.modal-body').spinner().start();\r\n\r\n    if ($('#chooseBonusProductModal').length !== 0) {\r\n        $('#chooseBonusProductModal').remove();\r\n    }\r\n    var bonusUrl;\r\n    if (data.bonusChoiceRuleBased) {\r\n        bonusUrl = data.showProductsUrlRuleBased;\r\n    } else {\r\n        bonusUrl = data.showProductsUrlListBased;\r\n    }\r\n\r\n    var htmlString = '<!-- Modal -->'\r\n        + '<div class=\"modal fade\" id=\"chooseBonusProductModal\" tabindex=\"-1\" role=\"dialog\">'\r\n        + '<span class=\"enter-message sr-only\" ></span>'\r\n        + '<div class=\"modal-dialog choose-bonus-product-dialog\" '\r\n        + 'data-total-qty=\"' + data.maxBonusItems + '\"'\r\n        + 'data-UUID=\"' + data.uuid + '\"'\r\n        + 'data-pliUUID=\"' + data.pliUUID + '\"'\r\n        + 'data-addToCartUrl=\"' + data.addToCartUrl + '\"'\r\n        + 'data-pageStart=\"0\"'\r\n        + 'data-pageSize=\"' + data.pageSize + '\"'\r\n        + 'data-moreURL=\"' + data.showProductsUrlRuleBased + '\"'\r\n        + 'data-bonusChoiceRuleBased=\"' + data.bonusChoiceRuleBased + '\">'\r\n        + '<!-- Modal content-->'\r\n        + '<div class=\"modal-content\">'\r\n        + '<div class=\"modal-header\">'\r\n        + '    <span class=\"\">' + data.labels.selectprods + '</span>'\r\n        + '    <button type=\"button\" class=\"close pull-right\" data-dismiss=\"modal\">'\r\n        + '        <span aria-hidden=\"true\">&times;</span>'\r\n        + '        <span class=\"sr-only\"> </span>'\r\n        + '    </button>'\r\n        + '</div>'\r\n        + '<div class=\"modal-body\"></div>'\r\n        + '<div class=\"modal-footer\"></div>'\r\n        + '</div>'\r\n        + '</div>'\r\n        + '</div>';\r\n    $('body').append(htmlString);\r\n    $('.modal-body').spinner().start();\r\n\r\n    $.ajax({\r\n        url: bonusUrl,\r\n        method: 'GET',\r\n        dataType: 'json',\r\n        success: function (response) {\r\n            var parsedHtml = parseHtml(response.renderedTemplate);\r\n            $('#chooseBonusProductModal .modal-body').empty();\r\n            $('#chooseBonusProductModal .enter-message').text(response.enterDialogMessage);\r\n            $('#chooseBonusProductModal .modal-header .close .sr-only').text(response.closeButtonText);\r\n            $('#chooseBonusProductModal .modal-body').html(parsedHtml.body);\r\n            $('#chooseBonusProductModal .modal-footer').html(parsedHtml.footer);\r\n            $('#chooseBonusProductModal').modal('show');\r\n            $.spinner().stop();\r\n        },\r\n        error: function () {\r\n            $.spinner().stop();\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * Updates the Mini-Cart quantity value after the customer has pressed the \"Add to Cart\" button\r\n * @param {string} response - ajax response from clicking the add to cart button\r\n */\r\nfunction handlePostCartAdd(response) {\r\n    $('.minicart').trigger('count:update', response);\r\n    var messageType = response.error ? 'alert-danger' : 'alert-success';\r\n    // show add to cart toast\r\n    if (response.newBonusDiscountLineItem\r\n        && Object.keys(response.newBonusDiscountLineItem).length !== 0) {\r\n        chooseBonusProducts(response.newBonusDiscountLineItem);\r\n    } else {\r\n        if ($('.add-to-cart-messages').length === 0) {\r\n            $('body').append(\r\n                '<div class=\"add-to-cart-messages\"></div>'\r\n            );\r\n        }\r\n\r\n        $('.add-to-cart-messages').append(\r\n            '<div class=\"alert ' + messageType + ' add-to-basket-alert text-center\" role=\"alert\">'\r\n            + response.message\r\n            + '</div>'\r\n        );\r\n\r\n        setTimeout(function () {\r\n            $('.add-to-basket-alert').remove();\r\n        }, 5000);\r\n    }\r\n}\r\n\r\n/**\r\n * Retrieves the bundle product item ID's for the Controller to replace bundle master product\r\n * items with their selected variants\r\n *\r\n * @return {string[]} - List of selected bundle product item ID's\r\n */\r\nfunction getChildProducts() {\r\n    var childProducts = [];\r\n    $('.bundle-item').each(function () {\r\n        childProducts.push({\r\n            pid: $(this).find('.product-id').text(),\r\n            quantity: parseInt($(this).find('label.quantity').data('quantity'), 10)\r\n        });\r\n    });\r\n\r\n    return childProducts.length ? JSON.stringify(childProducts) : [];\r\n}\r\n\r\n/**\r\n * Retrieve product options\r\n *\r\n * @param {jQuery} $productContainer - DOM element for current product\r\n * @return {string} - Product options and their selected values\r\n */\r\nfunction getOptions($productContainer) {\r\n    var options = $productContainer\r\n        .find('.product-option')\r\n        .map(function () {\r\n            var $elOption = $(this).find('.options-select');\r\n            var urlValue = $elOption.val();\r\n            var selectedValueId = $elOption.find('option[value=\"' + urlValue + '\"]')\r\n                .data('value-id');\r\n            return {\r\n                optionId: $(this).data('option-id'),\r\n                selectedValueId: selectedValueId\r\n            };\r\n        }).toArray();\r\n\r\n    return JSON.stringify(options);\r\n}\r\n\r\n/**\r\n * Makes a call to the server to report the event of adding an item to the cart\r\n *\r\n * @param {string | boolean} url - a string representing the end point to hit so that the event can be recorded, or false\r\n */\r\nfunction miniCartReportingUrl(url) {\r\n    if (url) {\r\n        $.ajax({\r\n            url: url,\r\n            method: 'GET',\r\n            success: function () {\r\n                // reporting urls hit on the server\r\n            },\r\n            error: function () {\r\n                // no reporting urls hit on the server\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nmodule.exports = {\r\n    attributeSelect: attributeSelect,\r\n    methods: {\r\n        editBonusProducts: function (data) {\r\n            chooseBonusProducts(data);\r\n        }\r\n    },\r\n\r\n    focusChooseBonusProductModal: function () {\r\n        $('body').on('shown.bs.modal', '#chooseBonusProductModal', function () {\r\n            $('#chooseBonusProductModal').siblings().attr('aria-hidden', 'true');\r\n            $('#chooseBonusProductModal .close').focus();\r\n        });\r\n    },\r\n\r\n    onClosingChooseBonusProductModal: function () {\r\n        $('body').on('hidden.bs.modal', '#chooseBonusProductModal', function () {\r\n            $('#chooseBonusProductModal').siblings().attr('aria-hidden', 'false');\r\n        });\r\n    },\r\n\r\n    trapChooseBonusProductModalFocus: function () {\r\n        $('body').on('keydown', '#chooseBonusProductModal', function (e) {\r\n            var focusParams = {\r\n                event: e,\r\n                containerSelector: '#chooseBonusProductModal',\r\n                firstElementSelector: '.close',\r\n                lastElementSelector: '.add-bonus-products'\r\n            };\r\n            focusHelper.setTabNextFocus(focusParams);\r\n        });\r\n    },\r\n\r\n    colorAttribute: function () {\r\n        $(document).on('click', '[data-attr=\"color\"] button', function (e) {\r\n            e.preventDefault();\r\n\r\n            if ($(this).attr('disabled')) {\r\n                return;\r\n            }\r\n            var $productContainer = $(this).closest('.set-item');\r\n            if (!$productContainer.length) {\r\n                $productContainer = $(this).closest('.product-detail');\r\n            }\r\n\r\n            attributeSelect($(this).attr('data-url'), $productContainer);\r\n        });\r\n    },\r\n\r\n    selectAttribute: function () {\r\n        $(document).on('change', 'select[class*=\"select-\"], .options-select', function (e) {\r\n            e.preventDefault();\r\n\r\n            var $productContainer = $(this).closest('.set-item');\r\n            if (!$productContainer.length) {\r\n                $productContainer = $(this).closest('.product-detail');\r\n            }\r\n            attributeSelect(e.currentTarget.value, $productContainer);\r\n        });\r\n    },\r\n\r\n    availability: function () {\r\n        $(document).on('change', '.quantity-select', function (e) {\r\n            e.preventDefault();\r\n\r\n            var $productContainer = $(this).closest('.product-detail');\r\n            if (!$productContainer.length) {\r\n                $productContainer = $(this).closest('.modal-content').find('.product-quickview');\r\n            }\r\n\r\n            if ($('.bundle-items', $productContainer).length === 0) {\r\n                attributeSelect($(e.currentTarget).find('option:selected').data('url'),\r\n                    $productContainer);\r\n            }\r\n        });\r\n    },\r\n\r\n    addToCart: function () {\r\n        $(document).on('click', 'button.add-to-cart, button.add-to-cart-global', function () {\r\n            var addToCartUrl;\r\n            var pid;\r\n            var pidsObj;\r\n            var setPids;\r\n\r\n            $('body').trigger('product:beforeAddToCart', this);\r\n\r\n            if ($('.set-items').length && $(this).hasClass('add-to-cart-global')) {\r\n                setPids = [];\r\n\r\n                $('.product-detail').each(function () {\r\n                    if (!$(this).hasClass('product-set-detail')) {\r\n                        setPids.push({\r\n                            pid: $(this).find('.product-id').text(),\r\n                            qty: $(this).find('.quantity-select').val(),\r\n                            options: getOptions($(this))\r\n                        });\r\n                    }\r\n                });\r\n                pidsObj = JSON.stringify(setPids);\r\n            }\r\n\r\n            pid = getPidValue($(this));\r\n\r\n            var $productContainer = $(this).closest('.product-detail');\r\n            if (!$productContainer.length) {\r\n                $productContainer = $(this).closest('.quick-view-dialog').find('.product-detail');\r\n            }\r\n\r\n            addToCartUrl = getAddToCartUrl();\r\n\r\n            var form = {\r\n                pid: pid,\r\n                pidsObj: pidsObj,\r\n                childProducts: getChildProducts(),\r\n                quantity: getQuantitySelected($(this))\r\n            };\r\n\r\n            if (!$('.bundle-item').length) {\r\n                form.options = getOptions($productContainer);\r\n            }\r\n\r\n            $(this).trigger('updateAddToCartFormData', form);\r\n            if (addToCartUrl) {\r\n                $.ajax({\r\n                    url: addToCartUrl,\r\n                    method: 'POST',\r\n                    data: form,\r\n                    success: function (data) {\r\n                        handlePostCartAdd(data);\r\n                        $('body').trigger('product:afterAddToCart', data);\r\n                        $.spinner().stop();\r\n                        miniCartReportingUrl(data.reportingURL);\r\n                    },\r\n                    error: function () {\r\n                        $.spinner().stop();\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    },\r\n    selectBonusProduct: function () {\r\n        $(document).on('click', '.select-bonus-product', function () {\r\n            var $choiceOfBonusProduct = $(this).parents('.choice-of-bonus-product');\r\n            var pid = $(this).data('pid');\r\n            var maxPids = $('.choose-bonus-product-dialog').data('total-qty');\r\n            var submittedQty = parseInt($choiceOfBonusProduct.find('.bonus-quantity-select').val(), 10);\r\n            var totalQty = 0;\r\n            $.each($('#chooseBonusProductModal .selected-bonus-products .selected-pid'), function () {\r\n                totalQty += $(this).data('qty');\r\n            });\r\n            totalQty += submittedQty;\r\n            var optionID = $choiceOfBonusProduct.find('.product-option').data('option-id');\r\n            var valueId = $choiceOfBonusProduct.find('.options-select option:selected').data('valueId');\r\n            if (totalQty <= maxPids) {\r\n                var selectedBonusProductHtml = ''\r\n                + '<div class=\"selected-pid row\" '\r\n                + 'data-pid=\"' + pid + '\"'\r\n                + 'data-qty=\"' + submittedQty + '\"'\r\n                + 'data-optionID=\"' + (optionID || '') + '\"'\r\n                + 'data-option-selected-value=\"' + (valueId || '') + '\"'\r\n                + '>'\r\n                + '<div class=\"col-sm-11 col-9 bonus-product-name\" >'\r\n                + $choiceOfBonusProduct.find('.product-name').html()\r\n                + '</div>'\r\n                + '<div class=\"col-1\"><i class=\"fa fa-times\" aria-hidden=\"true\"></i></div>'\r\n                + '</div>'\r\n                ;\r\n                $('#chooseBonusProductModal .selected-bonus-products').append(selectedBonusProductHtml);\r\n                $('.pre-cart-products').html(totalQty);\r\n                $('.selected-bonus-products .bonus-summary').removeClass('alert-danger');\r\n            } else {\r\n                $('.selected-bonus-products .bonus-summary').addClass('alert-danger');\r\n            }\r\n        });\r\n    },\r\n    removeBonusProduct: function () {\r\n        $(document).on('click', '.selected-pid', function () {\r\n            $(this).remove();\r\n            var $selected = $('#chooseBonusProductModal .selected-bonus-products .selected-pid');\r\n            var count = 0;\r\n            if ($selected.length) {\r\n                $selected.each(function () {\r\n                    count += parseInt($(this).data('qty'), 10);\r\n                });\r\n            }\r\n\r\n            $('.pre-cart-products').html(count);\r\n            $('.selected-bonus-products .bonus-summary').removeClass('alert-danger');\r\n        });\r\n    },\r\n    enableBonusProductSelection: function () {\r\n        $('body').on('bonusproduct:updateSelectButton', function (e, response) {\r\n            $('button.select-bonus-product', response.$productContainer).attr('disabled',\r\n                (!response.product.readyToOrder || !response.product.available));\r\n            var pid = response.product.id;\r\n            $('button.select-bonus-product', response.$productContainer).data('pid', pid);\r\n        });\r\n    },\r\n    showMoreBonusProducts: function () {\r\n        $(document).on('click', '.show-more-bonus-products', function () {\r\n            var url = $(this).data('url');\r\n            $('.modal-content').spinner().start();\r\n            $.ajax({\r\n                url: url,\r\n                method: 'GET',\r\n                success: function (html) {\r\n                    var parsedHtml = parseHtml(html);\r\n                    $('.modal-body').append(parsedHtml.body);\r\n                    $('.show-more-bonus-products:first').remove();\r\n                    $('.modal-content').spinner().stop();\r\n                },\r\n                error: function () {\r\n                    $('.modal-content').spinner().stop();\r\n                }\r\n            });\r\n        });\r\n    },\r\n    addBonusProductsToCart: function () {\r\n        $(document).on('click', '.add-bonus-products', function () {\r\n            var $readyToOrderBonusProducts = $('.choose-bonus-product-dialog .selected-pid');\r\n            var queryString = '?pids=';\r\n            var url = $('.choose-bonus-product-dialog').data('addtocarturl');\r\n            var pidsObject = {\r\n                bonusProducts: []\r\n            };\r\n\r\n            $.each($readyToOrderBonusProducts, function () {\r\n                var qtyOption =\r\n                    parseInt($(this)\r\n                        .data('qty'), 10);\r\n\r\n                var option = null;\r\n                if (qtyOption > 0) {\r\n                    if ($(this).data('optionid') && $(this).data('option-selected-value')) {\r\n                        option = {};\r\n                        option.optionId = $(this).data('optionid');\r\n                        option.productId = $(this).data('pid');\r\n                        option.selectedValueId = $(this).data('option-selected-value');\r\n                    }\r\n                    pidsObject.bonusProducts.push({\r\n                        pid: $(this).data('pid'),\r\n                        qty: qtyOption,\r\n                        options: [option]\r\n                    });\r\n                    pidsObject.totalQty = parseInt($('.pre-cart-products').html(), 10);\r\n                }\r\n            });\r\n            queryString += JSON.stringify(pidsObject);\r\n            queryString = queryString + '&uuid=' + $('.choose-bonus-product-dialog').data('uuid');\r\n            queryString = queryString + '&pliuuid=' + $('.choose-bonus-product-dialog').data('pliuuid');\r\n            $.spinner().start();\r\n            $.ajax({\r\n                url: url + queryString,\r\n                method: 'POST',\r\n                success: function (data) {\r\n                    $.spinner().stop();\r\n                    if (data.error) {\r\n                        $('#chooseBonusProductModal').modal('hide');\r\n                        if ($('.add-to-cart-messages').length === 0) {\r\n                            $('body').append('<div class=\"add-to-cart-messages\"></div>');\r\n                        }\r\n                        $('.add-to-cart-messages').append(\r\n                            '<div class=\"alert alert-danger add-to-basket-alert text-center\"'\r\n                            + ' role=\"alert\">'\r\n                            + data.errorMessage + '</div>'\r\n                        );\r\n                        setTimeout(function () {\r\n                            $('.add-to-basket-alert').remove();\r\n                        }, 3000);\r\n                    } else {\r\n                        $('.configure-bonus-product-attributes').html(data);\r\n                        $('.bonus-products-step2').removeClass('hidden-xl-down');\r\n                        $('#chooseBonusProductModal').modal('hide');\r\n\r\n                        if ($('.add-to-cart-messages').length === 0) {\r\n                            $('body').append('<div class=\"add-to-cart-messages\"></div>');\r\n                        }\r\n                        $('.minicart-quantity').html(data.totalQty);\r\n                        $('.add-to-cart-messages').append(\r\n                            '<div class=\"alert alert-success add-to-basket-alert text-center\"'\r\n                            + ' role=\"alert\">'\r\n                            + data.msgSuccess + '</div>'\r\n                        );\r\n                        setTimeout(function () {\r\n                            $('.add-to-basket-alert').remove();\r\n                            if ($('.cart-page').length) {\r\n                                location.reload();\r\n                            }\r\n                        }, 1500);\r\n                    }\r\n                },\r\n                error: function () {\r\n                    $.spinner().stop();\r\n                }\r\n            });\r\n        });\r\n    },\r\n\r\n    getPidValue: getPidValue,\r\n    getQuantitySelected: getQuantitySelected,\r\n    miniCartReportingUrl: miniCartReportingUrl\r\n};\r\n","'use strict';\r\n\r\nmodule.exports = function (include) {\r\n    if (typeof include === 'function') {\r\n        include();\r\n    } else if (typeof include === 'object') {\r\n        Object.keys(include).forEach(function (key) {\r\n            if (typeof include[key] === 'function') {\r\n                include[key]();\r\n            }\r\n        });\r\n    }\r\n};\r\n","'use strict';\n\nvar processInclude = require('base/util');\n\n$(document).ready(function () {\n    processInclude(require('./wishlist/wishlist'));\n});\n","'use strict';\n\nvar base = require('base/product/base');\nvar focusHelper = require('base/components/focus');\n\n/**\n * Updates the Mini-Cart quantity value after the customer has pressed the \"Add to Cart\" button\n * @param {string} response - ajax response from clicking the add to cart button\n */\nfunction handlePostCartAdd(response) {\n    $('.minicart').trigger('count:update', response);\n    var messageType = response.error ? 'alert-danger' : 'alert-success';\n\n    if ($('.add-to-cart-messages').length === 0) {\n        $('body').append(\n            '<div class=\"add-to-cart-messages\"></div>'\n        );\n    }\n\n    $('.add-to-cart-messages').append(\n        '<div class=\"alert ' + messageType + ' add-to-basket-alert text-center\" role=\"alert\">'\n        + response.message\n        + '</div>'\n    );\n\n    setTimeout(function () {\n        $('.add-to-basket-alert').remove();\n    }, 5000);\n}\n\n/**\n * Generates the modal window on the first call.\n *\n */\nfunction getModalHtmlElement() {\n    if ($('#editProductModal').length !== 0) {\n        $('#editProductModal').remove();\n    }\n    var htmlString = '<!-- Modal -->'\n        + '<div class=\"modal fade\" id=\"editWishlistProductModal\" tabindex=\"-1\" role=\"dialog\">'\n        + '<span class=\"enter-message sr-only\" ></span>'\n        + '<div class=\"modal-dialog quick-view-dialog\">'\n        + '<!-- Modal content-->'\n        + '<div class=\"modal-content\">'\n        + '<div class=\"modal-header\">'\n        + '    <button type=\"button\" class=\"close pull-right\" data-dismiss=\"modal\">'\n        + '        <span aria-hidden=\"true\">&times;</span>'\n        + '        <span class=\"sr-only\"> </span>'\n        + '    </button>'\n        + '</div>'\n        + '<div class=\"modal-body\"></div>'\n        + '<div class=\"modal-footer\"></div>'\n        + '</div>'\n        + '</div>'\n        + '</div>';\n    $('body').append(htmlString);\n}\n\n/**\n * Parses the html for a modal window\n * @param {string} html - representing the body and footer of the modal window\n *\n * @return {Object} - Object with properties body and footer.\n */\nfunction parseHtml(html) {\n    var $html = $('<div>').append($.parseHTML(html));\n\n    var body = $html.find('.product-quickview');\n    var footer = $html.find('.modal-footer').children();\n\n    return { body: body, footer: footer };\n}\n\n/**\n * replaces the content in the modal window for product variation to be edited.\n * @param {string} editProductUrl - url to be used to retrieve a new product model\n */\nfunction fillModalElement(editProductUrl) {\n    $('#editWishlistProductModal').spinner().start();\n\n    $.ajax({\n        url: editProductUrl,\n        method: 'GET',\n        dataType: 'json',\n        success: function (data) {\n            var parsedHtml = parseHtml(data.renderedTemplate);\n\n            $('#editWishlistProductModal .modal-body').empty();\n            $('#editWishlistProductModal .modal-body').html(parsedHtml.body);\n            $('#editWishlistProductModal .modal-footer').html(parsedHtml.footer);\n            $('#editWishlistProductModal .modal-header .close .sr-only').text(data.closeButtonText);\n            $('#editWishlistProductModal .enter-message').text(data.enterDialogMessage);\n            $('#editWishlistProductModal').modal('show');\n            $('body').trigger('editwishlistproduct:ready');\n            $.spinner().stop();\n        },\n        error: function () {\n            $('#editWishlistProductModal').spinner().stop();\n        }\n    });\n}\n\n/**\n * show toast response\n * @param {Object} res - from the call to set the public status of a list or item in a list\n */\nfunction showResponseMsg(res) {\n    $.spinner().stop();\n    var status;\n\n    if (res.success) {\n        status = 'alert-success';\n    } else {\n        status = 'alert-danger';\n    }\n\n    if ($('.add-to-wishlist-messages').length === 0) {\n        $('body').append(\n        '<div class=\"add-to-wishlist-messages \"></div>'\n        );\n    }\n\n    $('.add-to-wishlist-messages')\n        .append('<div class=\"add-to-wishlist-alert text-center ' + status + '\">' + res.msg + '</div>');\n\n    setTimeout(function () {\n        $('.add-to-wishlist-messages').remove();\n    }, 3000);\n}\n\n/**\n * toggles the public / private status of the item or wishlist item\n * @param {string} listID - the order model\n * @param {string} itemID - the customer model\n * @param {Object} callback - function to run if the ajax call returns with an\n *                        error so that the checkbox can be reset to it's original state\n */\nfunction updatePublicStatus(listID, itemID, callback) {\n    var url = $('#isPublicList').data('url');\n    $.spinner().start();\n    $.ajax({\n        url: url,\n        type: 'post',\n        dataType: 'json',\n        data: {\n            listID: listID,\n            itemID: itemID\n        },\n        success: function (data) {\n            if (callback && !data.success) { callback(); }\n            showResponseMsg(data, null);\n        },\n        error: function (err) {\n            if (callback) { callback(); }\n            showResponseMsg(err);\n        }\n    });\n}\n/**\n * @param {Object} $elementAppendTo - The element to append error html to\n * @param {string} msg - The error message\n * display error message if remove item from wishlist failed\n */\nfunction displayErrorMessage($elementAppendTo, msg) {\n    if ($('.remove-from-wishlist-messages').length === 0) {\n        $elementAppendTo.append(\n            '<div class=\"remove-from-wishlist-messages \"></div>'\n        );\n    }\n    $('.remove-from-wishlist-messages')\n        .append('<div class=\"remove-from-wishlist-alert text-center alert-danger\">' + msg + '</div>');\n\n    setTimeout(function () {\n        $('.remove-from-wishlist-messages').remove();\n    }, 3000);\n}\n\n/**\n * renders the list up to a given page number\n * @param {number} pageNumber - current page number\n * @param {boolean} spinner - if the spinner has already started\n * @param {string} focusElementSelector - selector of the element to focus on\n */\nfunction renderNewPageOfItems(pageNumber, spinner, focusElementSelector) {\n    var publicView = $('.wishlistItemCardsData').data('public-view');\n    var listUUID = $('.wishlistItemCardsData').data('uuid');\n    var url = $('.wishlistItemCardsData').data('href');\n    if (spinner) {\n        $.spinner().start();\n    }\n    var scrollPosition = document.documentElement.scrollTop;\n    var newPageNumber = pageNumber;\n    $.ajax({\n        url: url,\n        method: 'get',\n        data: {\n            pageNumber: ++newPageNumber,\n            publicView: publicView,\n            id: listUUID\n        }\n    }).done(function (data) {\n        $('.wishlistItemCards').empty();\n        $('body .wishlistItemCards').append(data);\n\n        if (focusElementSelector) {\n            $(focusElementSelector).focus();\n        } else {\n            document.documentElement.scrollTop = scrollPosition;\n        }\n    }).fail(function () {\n        $('.more-wl-items').remove();\n    });\n    $.spinner().stop();\n}\n\nmodule.exports = {\n    removeFromWishlist: function () {\n        $('body').on('click', '.remove-from-wishlist', function (e) {\n            e.preventDefault();\n            var url = $(this).data('url');\n            var elMyAccount = $('.account-wishlist-item').length;\n\n            // If user is in my account page, call removeWishlistAccount() end point, re-render wishlist cards\n            if (elMyAccount > 0) {\n                $('.wishlist-account-card').spinner().start();\n                $.ajax({\n                    url: url,\n                    type: 'get',\n                    dataType: 'html',\n                    data: {},\n                    success: function (html) {\n                        $('.wishlist-account-card>.card').remove();\n                        $('.wishlist-account-card').append(html);\n                        $('.wishlist-account-card').spinner().stop();\n                    },\n                    error: function () {\n                        var $elToAppend = $('.wishlist-account-card');\n                        $elToAppend.spinner().stop();\n                        var msg = $elToAppend.data('error-msg');\n                        displayErrorMessage($elToAppend, msg);\n                    }\n                });\n            // else user is in wishlist landing page, call removeProduct() end point, then remove this card\n            } else {\n                $.spinner().start();\n                $.ajax({\n                    url: url,\n                    type: 'get',\n                    dataType: 'json',\n                    data: {},\n                    success: function () {\n                        var pageNumber = $('.wishlistItemCardsData').data('page-number') - 1;\n                        renderNewPageOfItems(pageNumber, false);\n                    },\n                    error: function () {\n                        $.spinner().stop();\n                        var $elToAppendWL = $('.wishlistItemCards');\n                        var msg = $elToAppendWL.data('error-msg');\n                        displayErrorMessage($elToAppendWL, msg);\n                    }\n                });\n            }\n        });\n    },\n\n    viewProductViaEdit: function () {\n        $('body').on('click', '.edit-add-to-wishlist .edit', function (e) {\n            e.preventDefault();\n\n            var editProductUrl = $(this).attr('href');\n            $(e.target).trigger('editwishlistproduct:show');\n            getModalHtmlElement();\n            fillModalElement(editProductUrl);\n        });\n    },\n\n    viewProductViaSelectAttribute: function () {\n        $('body').on('click', '.select-attributes-btn', function (e) {\n            e.preventDefault();\n\n            var editProductUrl = $(this).data('get-product-url');\n            getModalHtmlElement();\n            fillModalElement(editProductUrl);\n        });\n    },\n\n    focusEditWishlistProductModal: function () {\n        $('body').on('shown.bs.modal', '#editWishlistProductModal', function () {\n            $('#editWishlistProductModal').siblings().attr('aria-hidden', 'true');\n            $('#editWishlistProductModal .close').focus();\n        });\n    },\n\n    onClosingEditWishlistProductModal: function () {\n        $('body').on('hidden.bs.modal', '#editWishlistProductModal', function () {\n            $('#editWishlistProductModal').remove();\n            $('.modal-backdrop').remove();\n            $('body').removeClass('modal-open');\n\n            $('#editWishlistProductModal').siblings().attr('aria-hidden', 'false');\n        });\n    },\n\n    trapEditWishlistProductModalFocus: function () {\n        $('body').on('keydown', '#editWishlistProductModal', function (e) {\n            var focusParams = {\n                event: e,\n                containerSelector: '#editWishlistProductModal',\n                firstElementSelector: '.close',\n                lastElementSelector: '.btn-update-wishlist-product',\n                nextToLastElementSelector: '.select-size'\n            };\n            focusHelper.setTabNextFocus(focusParams);\n        });\n    },\n\n    updateWishlistUpdateButton: function () {\n        $('body').on('product:updateAddToCart', function (e, response) {\n            response.$productContainer.find('.btn-update-wishlist-product').attr('disabled', !response.product.readyToOrder || !response.product.available);\n        });\n    },\n\n    updateWishListItem: function () {\n        $('body').on('click', '.btn-update-wishlist-product', function (e) {\n            e.preventDefault();\n\n            var updateButtonBlock = $(this).closest('.wishlist-item-update-button-block').find('.update-wishlist-url');\n            var updateProductUrl = updateButtonBlock.val();\n            var uuid = updateButtonBlock.data('uuid');\n\n            var form = {\n                uuid: uuid,\n                pid: base.getPidValue($(this))\n            };\n\n            $('#editWishlistProductModal').spinner().start();\n\n            $.ajax({\n                url: updateProductUrl,\n                type: 'post',\n                context: this,\n                data: form,\n                dataType: 'json',\n                success: function () {\n                    $.spinner().start();\n                    $('#editWishlistProductModal').spinner().stop();\n                    $('#editWishlistProductModal').remove();\n                    $('.modal-backdrop').remove();\n                    $('body').removeClass('modal-open');\n                    var pageNumber = $('.wishlistItemCardsData').data('page-number') - 1;\n                    renderNewPageOfItems(pageNumber, false, '.product-info .edit-add-to-wishlist .edit:first');\n                },\n                error: function () {\n                    var msg = $('.btn-update-wishlist-product').data('error-msg');\n\n                    $('#editWishlistProductModal').spinner().stop();\n                    $('#editWishlistProductModal').remove();\n                    $('.modal-backdrop').remove();\n                    $('body').removeClass('modal-open');\n\n                    if ($('.update-wishlist-messages').length === 0) {\n                        $('body').append(\n                            '<div class=\"update-wishlist-messages \"></div>'\n                        );\n                    }\n\n                    $('.update-wishlist-messages')\n                        .append('<div class=\"update-wishlist-alert text-center alert-danger\">' + msg + '</div>');\n\n                    setTimeout(function () {\n                        $('.update-wishlist-messages').remove();\n                    }, 5000);\n                }\n            });\n        });\n    },\n\n    toggleWishlistStatus: function () {\n        $('#isPublicList').on('click', function () {\n            var listID = $('#isPublicList').data('id');\n            updatePublicStatus(listID, null, null);\n        });\n    },\n\n    toggleWishlistItemStatus: function () {\n        $('body').on('click', '.wishlist-item-checkbox', function () {\n            var itemID = $(this).closest('.wishlist-hide').find('.custom-control-input').data('id');\n            var el = $(this).siblings('input');\n            var resetCheckBox = function () {\n                return el.prop('checked')\n                    ? el.prop('checked', false)\n                    : el.prop('checked', true);\n            };\n\n            updatePublicStatus(null, itemID, resetCheckBox);\n        });\n    },\n\n    addToCartFromWishlist: function () {\n        $('body').on('click', '.add-to-cart', function () {\n            var pid;\n            var addToCartUrl;\n            var pidsQty;\n\n            $('body').trigger('product:beforeAddToCart', this);\n\n            pid = $(this).data('pid');\n            addToCartUrl = $(this).data('url');\n            pidsQty = parseInt($(this).closest('.product-info').find('.quantity').val(), 10);\n\n            var form = {\n                pid: pid,\n                quantity: pidsQty\n            };\n\n            if ($(this).data('option')) {\n                form.options = JSON.stringify($(this).data('option'));\n            }\n\n            $(this).trigger('updateAddToCartFormData', form);\n            if (addToCartUrl) {\n                $.ajax({\n                    url: addToCartUrl,\n                    method: 'POST',\n                    data: form,\n                    success: function (data) {\n                        handlePostCartAdd(data);\n                        $('body').trigger('product:afterAddToCart', data);\n                        $.spinner().stop();\n                        base.miniCartReportingUrl(data.reportingURL, data.error);\n                    },\n                    error: function () {\n                        $.spinner().stop();\n                    }\n                });\n            }\n        });\n    },\n    moreWLItems: function () {\n        $('body').on('click', '.more-wl-items', function () {\n            var pageNumber = $('.wishlistItemCardsData').data('page-number');\n            renderNewPageOfItems(pageNumber, true);\n        });\n    },\n    copyWishlistLink: function () {\n        $('body').on('click', '.fa-link', function () {\n            var $temp = $('<input>');\n            $('body').append($temp);\n            $temp.val($('#shareUrl').val()).select();\n            document.execCommand('copy');\n            $temp.remove();\n            $('.copy-link-message').removeClass('d-none');\n            setTimeout(function () {\n                $('.copy-link-message').addClass('d-none');\n            }, 3000);\n        });\n    },\n    submitWishlistSearch: function () {\n        $('body').on('click', '#wishlist-search button', function (e) {\n            var firstName = $('#wishlist-search-first-name').val();\n            var lastName = $('#wishlist-search-last-name').val();\n            var email = $('#wishlist-search-email').val();\n\n            if ((!firstName && !lastName && !email)\n                || (firstName && !lastName && !email)\n                || (!firstName && lastName && !email)) {\n                e.preventDefault();\n                $('.wishlist-error-search div').addClass('alert alert-danger');\n                var errorText = $('.wishlist-error-search').data('error-msg');\n                $('.wishlist-error-search div').html(errorText);\n            }\n        });\n    },\n    moreWLSearchResults: function () {\n        $('body').on('click', '.more-wl-results', function () {\n            var firstName = $(this).data('search-fname');\n            var lastName = $(this).data('search-lname');\n            var pageNumber = $(this).data('page-number');\n            var uuids = [];\n            $('.wl-hit').each(function () {\n                uuids.push($(this).find('a').data('id'));\n            });\n            var url = $(this).data('url');\n            $.spinner().start();\n            $.ajax({\n                url: url,\n                method: 'POST',\n                data: {\n                    firstName: firstName,\n                    lastName: lastName,\n                    uuids: JSON.stringify(uuids),\n                    pageNumber: ++pageNumber\n                },\n                success: function (data) {\n                    if (data.results.changedList) {\n                        $('.wl-hits .wl-hit').remove();\n                    }\n                    $('#result-count').html(data.results.totalString);\n                    data.results.hits.forEach(function (hit) {\n                        var divString = '<div class=\"row wl-hit\">' +\n                            '<div class=\"text-left col-6\">' +\n                                hit.firstName + ' ' + hit.lastName +\n                            '</div>' +\n                            '<div class=\"text-right col-6\">' +\n                                '<a href=\"' + hit.url + '\" title=\"' + hit.urlTitle + '\" data-id=\"' + hit.id + '\">' +\n                                    hit.urlText +\n                                '</a>' +\n                            '</div>' +\n                            '</div>';\n                        $('.wl-hits').append(divString);\n                    });\n                    if (data.results.showMore) {\n                        $('.find-another-wl .more-wl-results').data('page-number', data.results.pageNumber);\n                    } else {\n                        $('.find-another-wl .more-wl-results').remove();\n                    }\n                    $.spinner().stop();\n                },\n                error: function () {\n                    $.spinner().stop();\n                }\n            });\n        });\n    }\n};\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AA/BA;;;;;;;;;;;;ACFA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AADA;AAGA;AACA;AACA;AACA;AAAA;AADA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAbA;AAeA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AA0BA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA;AAkcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAIA;AACA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1CA;AA4CA;AACA;AAEA;AACA;AACA;AA5SA;;;;;;;;;;;;ACliBA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAMA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AAAA;AAiBA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBA;AAoBA;AAEA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAfA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AAGA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAHA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AAgBA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAGA;AACA;AACA;AACA;AAnCA;AAqCA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAUA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AApCA;AAsCA;AACA;AApTA;;;;A","sourceRoot":""}