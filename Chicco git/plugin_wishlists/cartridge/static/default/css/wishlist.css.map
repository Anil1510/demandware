{"version":3,"file":"wishlist.css","sources":["webpack:///./whislist/plugin_wishlists/cartridge/client/default/scss/D:/SFCC-Chicco/repository/whislist/plugin_wishlists/cartridge/client/default/scss/D:/SFCC-Chicco/repository/whislist/plugin_wishlists/cartridge/client/default/scss/wishlist/_wishlist.scss","webpack:///./whislist/plugin_wishlists/cartridge/client/default/scss/D:/SFCC-Chicco/repository/whislist/plugin_wishlists/cartridge/client/default/scss/D:/SFCC-Chicco/repository/node_modules/bootstrap/scss/mixins/_breakpoints.scss","webpack:///./whislist/plugin_wishlists/cartridge/client/default/scss/D:/SFCC-Chicco/repository/whislist/plugin_wishlists/cartridge/client/default/scss/D:/SFCC-Chicco/repository/storefront-reference-architecture/cartridges/app_storefront_base/cartridge/client/default/scss/components/_toastMessage.scss","webpack:///./whislist/plugin_wishlists/cartridge/client/default/scss/D:/SFCC-Chicco/repository/whislist/plugin_wishlists/cartridge/client/default/scss/D:/SFCC-Chicco/repository/whislist/plugin_wishlists/cartridge/client/default/scss/components/_wishlistSocial.scss"],"sourcesContent":["@import \"~base/variables\";\n@import \"bootstrap/scss/variables\";\n@import \"bootstrap/scss/mixins/breakpoints\";\n@import \"~base/components/toastMessage\";\n\n$spacer: 0.625em;\n$negative-spacer: -0.625rem;\n\n.add-to-wishlist-messages,\n.remove-from-wishlist-messages {\n    transform: translate(-50%, -50%);\n    position: fixed;\n    top: 15%;\n    left: 50%;\n}\n\n.add-to-wishlist-alert,\n.remove-from-wishlist-alert {\n    animation: fade 5s linear forwards;\n    box-shadow: 1px 1px 5px grey;\n    padding: 1em;\n\n    @keyframes fade {\n        0% { opacity: 0; }\n        10% { opacity: 1; }\n        90% { opacity: 1; }\n        100% { opacity: 0; }\n    }\n\n    &.show {\n        display: block;\n    }\n}\n\n.add-to-cart-wishList {\n    .add-to-cart {\n        float: right;\n        margin-right: 1.5em;\n\n        @include media-breakpoint-down(xs) {\n            float: none;\n            width: 100%;\n        }\n    }\n}\n\n.select-attributes-wishList {\n    .select-attributes-btn {\n        float: right;\n        margin-right: 1.5em;\n\n        @include media-breakpoint-down(xs) {\n            float: none;\n            width: 100%;\n        }\n    }\n}\n\n.product-info {\n    margin-bottom: 0.313em;\n    padding: $spacer;\n\n    @include media-breakpoint-up(md) {\n        height: auto;\n    }\n}\n\n.item-image {\n    height: 5.625em;\n    width: 5.625em;\n    margin-right: 0.938em;\n    flex-grow: 0;\n    flex-shrink: 0;\n\n    img.product-image {\n        display: block;\n        margin: 0 auto;\n        max-width: 100%;\n        height: auto;\n        max-height: 5.625em;\n    }\n}\n\n.line-item-attributes {\n    font-size: 0.813rem;\n    margin: 0;\n}\n\n.item-attributes {\n    display: inline-block;\n    vertical-align: top;\n}\n\n.line-item-name {\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    overflow: hidden;\n    font-size: 1em;\n    color: $darker-gray;\n    font-weight: bold;\n    margin-bottom: $spacer;\n    width: 90%;\n}\n\n.product-card-price {\n    font-size: 0.75rem;\n    margin-bottom: 0.5rem;\n\n    @include media-breakpoint-down(xs) {\n        margin-left: 6.5rem;\n    }\n}\n\n.edit {\n    font-size: 0.813rem;\n}\n\n.wishlist-line-item-divider {\n    margin: 0.625em -0.615em 0.625em -0.615em;\n}\n\n.wishlist-edit-item-divider {\n    margin: 0.625em -0.615em 0.625em -0.615em;\n}\n\n.product-info {\n    .remove-btn {\n        color: $slightly-darker-gray;\n        font-size: 1.625em;\n        padding: 0;\n        position: absolute;\n        top: 0;\n        right: 0.25rem;\n        border: none;\n        background-color: $white;\n\n        @include media-breakpoint-up(lg) {\n            top: 0;\n            bottom: 0;\n            right: $negative-spacer;\n            margin-top: $negative-spacer;\n            margin-bottom: $negative-spacer;\n        }\n    }\n}\n\n.remove-btn-lg {\n    border: none;\n    border-radius: 0;\n    font-size: 1.625em;\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    padding-left: 0.3125rem;\n    padding-right: 0.3125rem;\n    z-index: 1;\n}\n\n.wishlist-hide {\n    margin: 0 0 0.15rem 1rem;\n}\n\n.line-item-price-info {\n    margin-bottom: 0.25rem;\n}\n\n.wishlist-item-update-button-block {\n    text-align: center;\n\n    @include media-breakpoint-only(xs) {\n        padding-bottom: 26px;\n\n        .btn {\n            width: 98%;\n            margin: 1%;\n            display: block;\n        }\n    }\n}\n\n.update-wishlist-messages {\n    @include toast-message();\n}\n\n.update-wishlist-alert {\n    @include toast-alert();\n}\n\n.more-wl-items,\n.my-account {\n    margin-bottom: 0.5rem;\n    margin-top: 0.5rem;\n}\n\n#wishlist-search {\n    .wishlist-error-search {\n        margin-top: 1rem;\n    }\n\n    button {\n        margin-bottom: 1rem;\n    }\n}\n\n.wl-hit,\n.find-another-wl {\n    margin-top: 1rem;\n}\n\n.wishlist-owner {\n    font-size: 1.5rem;\n}\n","// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width. Null for the largest (last) breakpoint.\n// The maximum value is calculated as the minimum of the next one less 0.02px\n// to work around the limitations of `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $next: breakpoint-next($name, $breakpoints);\n  @return if($next, breakpoint-min($next, $breakpoints) - .02px, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash infront.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  $max: breakpoint-max($name, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($name, $breakpoints) {\n      @content;\n    }\n  }\n}\n","@mixin toast-message() {\r\n    transform: translate(-50%, -50%);\r\n    position: fixed;\r\n    top: 15%;\r\n    left: 50%;\r\n}\r\n\r\n@mixin toast-alert() {\r\n    animation: fade 5s linear forwards;\r\n    box-shadow: 1px 1px 5px grey;\r\n    padding: 1em;\r\n\r\n    @keyframes fade {\r\n        0% { opacity: 0; }\r\n        10% { opacity: 1; }\r\n        90% { opacity: 1; }\r\n        100% { opacity: 0; }\r\n    }\r\n\r\n    &.show {\r\n        display: block;\r\n    }\r\n}\r\n","@import \"variables\";\n@import \"bootstrap/scss/variables\";\n@import \"bootstrap/scss/mixins/breakpoints\";\n@import \"~base/components/toastMessage\";\n\n.wl-social-sharing {\n    color: $grey6;\n    font-size: 1.75em;\n\n    @include media-breakpoint-down(sm) {\n        font-size: 1.25em;\n    }\n\n    .share-icons {\n        text-decoration: none;\n\n        i {\n            color: $grey6;\n        }\n    }\n\n    .fa-link {\n        cursor: pointer;\n    }\n}\n\n.wl-social-sharing-text {\n    font-size: 0.85em;\n    font-weight: 200;\n}\n\n.copy-link-message {\n    @include toast-message();\n}\n"],"mappings":"AAQA;;AAEA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAVA;;AAcA;AACA;AAGA;AAEA;AACA;ACoCA;ADvCA;AAMA;AACA;AACA;AAIA;AAEA;AACA;ACwBA;AD3BA;AAMA;AACA;AACA;AAIA;AACA;AACA;ACAA;ADFA;AAKA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;ACjCA;AD+BA;AAKA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1EA;ADiEA;AAYA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AC/FA;AD8FA;AAIA;AAJA;AAOA;AACA;AACA;AACA;AAIA;AEpLA;AACA;AACA;AACA;AACA;AFoLA;AEjLA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AFyKA;AErKA;AACA;AFwKA;;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAHA;AAMA;AACA;AAGA;;AAEA;AACA;AAEA;AACA;AACA;AG/MA;AACA;AACA;AFkEA;AEpEA;AAKA;AALA;AASA;AATA;AAYA;AAZA;AAiBA;AACA;AAGA;AACA;AACA;AACA;AAEA;AD9BA;AACA;AACA;AACA;;","sourceRoot":""}