{"version":3,"file":"account\\dashboard.css","sources":["webpack:///./whislist/plugin_wishlists/cartridge/client/default/scss/account/D:/SFCC-Chicco/repository/whislist/plugin_wishlists/cartridge/client/default/scss/account/D:/SFCC-Chicco/repository/storefront-reference-architecture/cartridges/app_storefront_base/cartridge/client/default/scss/components/_formFields.scss","webpack:///./whislist/plugin_wishlists/cartridge/client/default/scss/account/D:/SFCC-Chicco/repository/whislist/plugin_wishlists/cartridge/client/default/scss/account/D:/SFCC-Chicco/repository/storefront-reference-architecture/cartridges/app_storefront_base/cartridge/client/default/scss/account/account.scss","webpack:///./whislist/plugin_wishlists/cartridge/client/default/scss/account/D:/SFCC-Chicco/repository/whislist/plugin_wishlists/cartridge/client/default/scss/account/D:/SFCC-Chicco/repository/storefront-reference-architecture/cartridges/app_storefront_base/cartridge/client/default/scss/account/dashboard.scss","webpack:///./whislist/plugin_wishlists/cartridge/client/default/scss/account/D:/SFCC-Chicco/repository/whislist/plugin_wishlists/cartridge/client/default/scss/account/D:/SFCC-Chicco/repository/whislist/plugin_wishlists/cartridge/client/default/scss/components/_wishlistSocial.scss","webpack:///./whislist/plugin_wishlists/cartridge/client/default/scss/account/D:/SFCC-Chicco/repository/whislist/plugin_wishlists/cartridge/client/default/scss/account/D:/SFCC-Chicco/repository/node_modules/bootstrap/scss/mixins/_breakpoints.scss","webpack:///./whislist/plugin_wishlists/cartridge/client/default/scss/account/D:/SFCC-Chicco/repository/whislist/plugin_wishlists/cartridge/client/default/scss/account/D:/SFCC-Chicco/repository/storefront-reference-architecture/cartridges/app_storefront_base/cartridge/client/default/scss/components/_toastMessage.scss","webpack:///./whislist/plugin_wishlists/cartridge/client/default/scss/account/D:/SFCC-Chicco/repository/whislist/plugin_wishlists/cartridge/client/default/scss/account/D:/SFCC-Chicco/repository/whislist/plugin_wishlists/cartridge/client/default/scss/wishlist/_dashboard.scss"],"sourcesContent":["\r\n.form-group {\r\n    &.required .form-control-label::before {\r\n        content: \"*\";\r\n        color: $danger;\r\n    }\r\n}\r\n","@import \"../variables\";\r\n@import \"bootstrap/scss/variables\";\r\n@import \"bootstrap/scss/mixins/breakpoints\";\r\n@import \"../components/formFields\";\r\n\r\n.account-image {\r\n    background-image: url(../../images/account.jpg);\r\n    background-position-y: 40%;\r\n}\r\n\r\n.card-footer > a {\r\n    color: #{var(--skin-primary-color-1)};\r\n    text-decoration: underline;\r\n}\r\n\r\n.card-header > a {\r\n    color: #{var(--skin-primary-color-1)};\r\n    float: right;\r\n    text-decoration: underline;\r\n}\r\n\r\n.card-info-group {\r\n    p {\r\n        margin-bottom: 0;\r\n    }\r\n\r\n    div {\r\n        margin-bottom: 1rem;\r\n    }\r\n\r\n    div:last-child {\r\n        margin-bottom: 0;\r\n    }\r\n}\r\n\r\n.order-history-control,\r\n.order-history {\r\n    h2 {\r\n        font-weight: bold;\r\n        margin-top: 0.5rem;\r\n    }\r\n}\r\n\r\n.dashboard-order-card-image {\r\n    width: 7rem;\r\n    padding-right: 1rem;\r\n}\r\n\r\n.dashboard-order-card-footer-columns:last-child {\r\n    text-align: right;\r\n}\r\n\r\n.dashboard-order-card-footer-value {\r\n    font-weight: bold;\r\n    font-size: 1rem;\r\n}\r\n\r\n.card-header h2,\r\n.card-header h3 {\r\n    font-size: 1.5rem;\r\n    margin-bottom: 0;\r\n}\r\n","@import \"../variables\";\r\n@import \"bootstrap/scss/variables\";\r\n@import \"bootstrap/scss/mixins/breakpoints\";\r\n@import \"account\";\r\n\r\n.card-footer-border {\r\n    border-top: 1px dashed $horizontal-border-grey;\r\n}\r\n\r\n.card-make-default-link {\r\n    margin-top: 1rem;\r\n}\r\n\r\n.dashboard-cards-block-title {\r\n    font-weight: bold;\r\n}\r\n\r\n.dashboard-order-card-status {\r\n    text-transform: capitalize;\r\n}\r\n\r\n.dashboard-order-card-image {\r\n    width: 7rem;\r\n}\r\n\r\n.account-landing-ordercard {\r\n    padding: 0;\r\n    height: 1rem;\r\n    margin-left: 1.25rem;\r\n    border-bottom: 0 none;\r\n    margin-top: 1rem;\r\n\r\n    h4 {\r\n        font-size: 1.2rem;\r\n    }\r\n}\r\n\r\ndiv.order-number {\r\n    padding-top: 0.2rem;\r\n}\r\n\r\n.dashboard-cards-block-title {\r\n    margin-bottom: 1em;\r\n}\r\n","@import \"variables\";\n@import \"bootstrap/scss/variables\";\n@import \"bootstrap/scss/mixins/breakpoints\";\n@import \"~base/components/toastMessage\";\n\n.wl-social-sharing {\n    color: $grey6;\n    font-size: 1.75em;\n\n    @include media-breakpoint-down(sm) {\n        font-size: 1.25em;\n    }\n\n    .share-icons {\n        text-decoration: none;\n\n        i {\n            color: $grey6;\n        }\n    }\n\n    .fa-link {\n        cursor: pointer;\n    }\n}\n\n.wl-social-sharing-text {\n    font-size: 0.85em;\n    font-weight: 200;\n}\n\n.copy-link-message {\n    @include toast-message();\n}\n","// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width. Null for the largest (last) breakpoint.\n// The maximum value is calculated as the minimum of the next one less 0.02px\n// to work around the limitations of `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $next: breakpoint-next($name, $breakpoints);\n  @return if($next, breakpoint-min($next, $breakpoints) - .02px, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash infront.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  $max: breakpoint-max($name, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($name, $breakpoints) {\n      @content;\n    }\n  }\n}\n","@mixin toast-message() {\r\n    transform: translate(-50%, -50%);\r\n    position: fixed;\r\n    top: 15%;\r\n    left: 50%;\r\n}\r\n\r\n@mixin toast-alert() {\r\n    animation: fade 5s linear forwards;\r\n    box-shadow: 1px 1px 5px grey;\r\n    padding: 1em;\r\n\r\n    @keyframes fade {\r\n        0% { opacity: 0; }\r\n        10% { opacity: 1; }\r\n        90% { opacity: 1; }\r\n        100% { opacity: 0; }\r\n    }\r\n\r\n    &.show {\r\n        display: block;\r\n    }\r\n}\r\n","@import \"variables\";\n@import \"bootstrap/scss/variables\";\n@import \"bootstrap/scss/mixins/breakpoints\";\n@import \"../components/wishlistSocial\";\n\n.account-wishlist-item {\n    border-bottom: 1px dashed $grey3;\n    border-left: 0 none;\n    border-right: 0 none;\n    border-top: 0 none;\n    margin-right: 0.15rem;\n    margin-left: 0.15rem;\n\n    .line-item-header {\n        margin-bottom: 0.1rem;\n    }\n\n    .account-wl-attributes {\n        padding-left: 0;\n    }\n\n    .account-wl-image {\n        padding-right: 1rem;\n    }\n}\n\n.account-wishlist-item:last-child {\n    border: 0 none;\n}\n\n.account-wishlist-item .remove-from-wishlist {\n    color: $grey4;\n    font-size: 1.65em;\n    padding: 0;\n    position: absolute;\n    border: none;\n    background-color: $white;\n    top: -0.625rem;\n    right: 1.25rem;\n}\n"],"mappings":"AACA;AAEA;AACA;AACA;ACAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAHA;AAMA;AACA;AAPA;AAUA;AACA;AAGA;;AAGA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;ACxDA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;ACtCA;AACA;AACA;ACkEA;ADpEA;AAKA;AALA;AASA;AATA;AAYA;AAZA;AAiBA;AACA;AAGA;AACA;AACA;AACA;AAEA;AE9BA;AACA;AACA;AACA;AACA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AATA;AAaA;AAbA;AAiBA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;","sourceRoot":""}